name: PR Labeler (by title/body)
on:
  pull_request_target:
    types: [opened, edited, synchronize]

permissions:
  pull-requests: write
  issues: write

jobs:
  label-by-title:
    runs-on: ubuntu-latest
    steps:
      - name: Add labels from Conventional Commit prefix
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title || ""
            const body  = context.payload.pull_request.body || ""
            const labelsToAdd = new Set()

            // Conventional Commits â†’ labels
            if (/^feat(\(.+\))?:/i.test(title)) labelsToAdd.add('feature')
            if (/^fix(\(.+\))?:/i.test(title)) labelsToAdd.add('fix')
            if (/^chore(\(.+\))?:/i.test(title)) labelsToAdd.add('chore')
            if (/^docs(\(.+\))?:/i.test(title)) labelsToAdd.add('docs')
            if (/^refactor(\(.+\))?:/i.test(title)) labelsToAdd.add('refactor')
            if (/^perf(\(.+\))?:/i.test(title)) labelsToAdd.add('performance')
            if (/^test(\(.+\))?:/i.test(title)) labelsToAdd.add('tests')

            // Keyword-based labels from body (example)
            if (/BREAKING CHANGE:/i.test(body)) labelsToAdd.add('breaking')

            if (labelsToAdd.size) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: [...labelsToAdd]
              })
            }
