name: Submit screenshots to Percy for visual regression testing.

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR number to run Percy on"
        required: true
        type: number
      preview_url:
        description: "Netlify preview URL"
        required: true
        type: string

permissions:
  contents: read
  pull-requests: read

jobs:
  # ---------- PUSH (main) path: build & run locally ----------
  percy-push:
    if: github.event_name == 'push'
    name: Percy - Storybook Components 3.x
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/workflows/setup-workspace

      - name: Use cached storybook build
        id: cache-storybook
        uses: actions/cache@v3
        with:
          path: storybook-static
          key: storybook-${{ github.sha }}

      - name: Build Storybook
        if: steps.cache-storybook.outputs.cache-hit != 'true'
        run: pnpm --filter @ucla-library-monorepo/ucla-library-website-components run build-storybook

      - name: Percy via Cypress (local storybook)
        uses: cypress-io/github-action@v5
        with:
          working-directory: packages/vue-component-library
          start: pnpm --filter @ucla-library-monorepo/ucla-library-website-components exec http-server ./storybook-static -p 6006
          install: false
          command-prefix: "percy exec -- pnpx"
          wait-on: http://localhost:6006
          wait-on-timeout: 180
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_STORYBOOK_VUE3X }}
          PERCY_TARGET_BRANCH: main

  # ---------- MANUAL path: look up PR + branch type ----------
  get-pr-info:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    outputs:
      is_fork: ${{ steps.info.outputs.is_fork }}
      merge_ref: ${{ steps.info.outputs.merge_ref }}
      head_ref: ${{ steps.info.outputs.head_ref }}
      head_ref_sanitized: ${{ steps.info.outputs.head_ref_sanitized }} # <-- add
      base_ref: ${{ steps.info.outputs.base_ref }}
      pr_sha: ${{ steps.info.outputs.pr_sha }}
    steps:
      - id: info
        # actions/github-script lets us compute and set outputs
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNum = Number('${{ github.event.inputs.pr_number }}');
            if (!Number.isInteger(prNum)) core.setFailed(`Invalid pr_number: "${prNum}"`);

            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNum,
            });

            const isFork  = pr.head.repo?.fork ? 'true' : 'false';
            const headRef = pr.head.ref;   // e.g. "feat/buttons/page-view"
            const baseRef = pr.base.ref;   // e.g. "main"

            // Sanitize for use in env/labels: replace anything not [A-Za-z0-9_.-] with '-'
            const sanitized = headRef.replace(/[^\w.-]+/g, '-');

            core.setOutput('is_fork', isFork);
            core.setOutput('merge_ref', `refs/pull/${pr.number}/merge`);
            core.setOutput('head_ref', headRef);
            core.setOutput('head_ref_sanitized', sanitized);  // <-- new
            core.setOutput('base_ref', baseRef);
            core.setOutput('pr_sha', pr.head.sha);

  # ---------- MANUAL: internal PR (no environment gate) ----------
  percy-internal:
    if: github.event_name == 'workflow_dispatch' && needs.get-pr-info.outputs.is_fork == 'false'
    needs: get-pr-info
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout PR merge ref (internal)
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get-pr-info.outputs.merge_ref }}
          fetch-depth: 1
          persist-credentials: false

      # ðŸ‘‡ Reuse the same setup that works on push (installs & caches Cypress)
      - uses: ./.github/workflows/setup-workspace
        with:
          do_checkout: "false" # already checked out above

      - name: Debug Cypress cache
        run: |
          npx cypress --version || true
          npx cypress cache path || true
          ls -la "$(npx cypress cache path)" || true
        env:
          CYPRESS_CACHE_FOLDER: $HOME/.cache/Cypress

      - name: Percy via Cypress (internal, Netlify preview)
        uses: cypress-io/github-action@v5
        with:
          working-directory: packages/vue-component-library
          install: false
          start: "" # using remote Netlify URL
          wait-on: ${{ github.event.inputs.preview_url }}
          wait-on-timeout: 180
          command-prefix: "percy exec -- pnpx"
        env:
          CYPRESS_baseUrl: ${{ github.event.inputs.preview_url }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_STORYBOOK_VUE3X }}
          PERCY_TARGET_BRANCH: main

  # ---------- MANUAL: forked PR (gated environment) ----------
  percy-fork:
    if: github.event_name == 'workflow_dispatch' && needs.get-pr-info.outputs.is_fork == 'true'
    needs: get-pr-info
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment:
      name: percy-secrets # configure required reviewers in Settings â†’ Environments
    steps:
      - name: Checkout PR merge ref (fork)
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get-pr-info.outputs.merge_ref }}
          fetch-depth: 1
          persist-credentials: false

      # ðŸ‘‡ Reuse the same setup that works on push (installs & caches Cypress)
      - uses: ./.github/workflows/setup-workspace
        with:
          do_checkout: "false" # already checked out above

      - name: Debug Cypress cache
        run: |
          npx cypress --version || true
          npx cypress cache path || true
          ls -la "$(npx cypress cache path)" || true
        env:
          CYPRESS_CACHE_FOLDER: $HOME/.cache/Cypress

      - name: Percy via Cypress (fork, Netlify preview)
        uses: cypress-io/github-action@v5
        with:
          working-directory: packages/vue-component-library
          install: false
          start: "" # using remote Netlify URL
          wait-on: ${{ github.event.inputs.preview_url }}
          wait-on-timeout: 180
          command-prefix: "percy exec -- pnpx"
        env:
          CYPRESS_baseUrl: ${{ github.event.inputs.preview_url }}
          # NOTE: uses your fork secret name from your earlier snippet
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_STORYBOOK }}
          PERCY_TARGET_BRANCH: main
          PERCY_BRANCH: pr-${{ github.event.inputs.pr_number }}-${{ needs.get-pr-info.outputs.head_ref_sanitized }}
          PERCY_PULL_REQUEST: ${{ github.event.inputs.pr_number }}
          PERCY_COMMIT: ${{ needs.get-pr-info.outputs.pr_sha }}
