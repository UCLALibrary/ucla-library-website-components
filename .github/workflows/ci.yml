name: Run CI Suite

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Cancel this run if a newer commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  percy-instructions:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      pull-requests: write
      issues: write
    steps:
      - name: Comment with percy instructions
        uses: bubkoo/auto-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          pullRequestOpened: >
            # Percy Screenshots

            In order to conserve our percy screenshot allowance, percy is not configured to run automatically. Please make sure the PR is ready and all other checks are passing, then start it manually:

            1. Visit https://github.com/UCLALibrary/ucla-library-website-components/actions/workflows/percy.yml
            2. Click the 'Run workflow' button in the blue bar.
            3. Select the correct branch for this PR and click 'Run workflow' again to confirm.

  eslint:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/setup-workspace
      - run: pnpm -r run lint

  vite:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/setup-workspace
      - run: pnpm run build

  # --- Build Storybook once (no secrets) and publish artifact ---
  storybook-build:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/setup-workspace
      - name: Cache Storybook Build
        id: cache-storybook
        uses: actions/cache@v3
        with:
          path: storybook-static
          key: storybook-${{ github.sha }}
      - run: pnpm --filter @ucla-library-monorepo/ucla-library-website-components run build-storybook
      - name: Upload storybook artifact
        uses: actions/upload-artifact@v4
        with:
          # Works for PRs (has PR number) and pushes (falls back to run_id)
          name: storybook-static-${{ github.event.pull_request.number || github.run_id }}-${{ github.sha }}
          path: packages/vue-component-library/storybook-static
          if-no-files-found: error
          retention-days: 3

  # --- Deploy (merged) on main/vue3.x pushes (uses secrets) ---
  storybook-merged-deploy:
    if: github.event_name == 'push' && (github.ref_name == 'main' || github.ref_name == 'vue3.x')
    needs: storybook-build
    permissions:
      contents: write
      pull-requests: write
      issues: write
      statuses: write
      deployments: write
    runs-on: ubuntu-latest
    steps:
      - name: Download storybook artifact
        uses: actions/download-artifact@v4
        with:
          name: storybook-static-${{ github.run_id }}-${{ github.sha }}
          path: storybook-static
      - name: Deploy to Netlify (merged)
        uses: nwtgck/actions-netlify@v2 # v1.2.3
        with:
          production-deploy: true
          deploy-message: https://github.com/UCLALibrary/ucla-library-website-component/commit/${{ github.sha }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          publish-dir: "./storybook-static"
          fails-without-credentials: true
          github-deployment-environment: test
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_STORYBOOK_VUE3X }}

  # --- Deploy preview for INTERNAL PRs (no approval needed) ---
  storybook-preview-internal:
    if: github.event_name == 'pull_request' &&
      github.event.pull_request.head.repo.full_name == github.repository
    needs: storybook-build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      statuses: write
      deployments: write
    steps:
      - name: Download storybook artifact
        uses: actions/download-artifact@v4
        with:
          name: storybook-static-${{ github.event.pull_request.number }}-${{ github.sha }}
          path: storybook-static
      - name: Deploy to Netlify (preview, internal)
        uses: nwtgck/actions-netlify@v2 # v1.2.3
        with:
          production-deploy: false
          deploy-message: https://github.com/UCLALibrary/ucla-library-website-component/pull/${{ github.event.pull_request.number }}
          alias: deploy-preview-${{ github.event.pull_request.number }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          overwrites-pull-request-comment: true
          publish-dir: "./storybook-static"
          fails-without-credentials: true
          github-deployment-environment: storybook--${{ github.event_name }}-${{ github.event.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_STORYBOOK_VUE3X }}

  storybook-cypress:
    needs: storybook-build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      # Your workspace setup must NOT require secrets for forks
      - uses: ./.github/workflows/setup-workspace

      - name: Download Storybook artifact
        uses: actions/download-artifact@v4
        with:
          name: storybook-static-${{ github.event.pull_request.number || github.run_id }}-${{ github.sha }}
          path: packages/vue-component-library/_artifact

      - name: Normalize to packages/vue-component-library/storybook-static
        shell: bash
        run: |
          set -euo pipefail
          cd packages/vue-component-library/_artifact

          target="../storybook-static"
          rm -rf "$target"
          # no dir; maybe files are at root of the artifact → move all contents
          mkdir -p "$target"
          shopt -s dotglob nullglob
          # Only move if there is something to move to avoid errors
          files=( * )
          if (( ${#files[@]} )); then
            mv "${files[@]}" "$target"/
          fi

          cd ..
          rm -rf _artifact
          echo "Normalized contents:"
          ls -la storybook-static

      # 2) Verify Cypress is installed (devDependency) in the filtered package
      - name: Verify Cypress Installation
        shell: bash
        run: pnpm --filter @ucla-library-monorepo/ucla-library-website-components exec cypress --version

      # 3) Run Cypress against the static Storybook
      - name: Cypress test for Storybook Components
        uses: cypress-io/github-action@v5
        with:
          install: false
          working-directory: packages/vue-component-library
          start: pnpm  exec http-server ./storybook-static -p 6006
          wait-on: http://localhost:6006

  cleanup-artifact:
    # wait for *all* possible jobs to finish (they may be "skipped"—that's fine)
    needs:
      - percy-instructions
      - eslint
      - vite
      - storybook-build
      - storybook-merged-deploy
      - storybook-preview-internal
      - storybook-cypress
    if: always() # still run if any prior job failed/skipped
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Compute artifact name
        id: art
        run: echo "name=storybook-static-${{ github.event.pull_request.number || github.run_id }}-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Delete artifact (after all dependents finished)
        uses: GeekyEggo/delete-artifact@v5
        with:
          name: ${{ steps.art.outputs.name }}
